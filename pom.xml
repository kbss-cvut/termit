<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.3</version>
    </parent>

    <artifactId>termit</artifactId>
    <version>3.5.0</version>
    <name>TermIt</name>
    <description>Terminology manager based on Semantic Web technologies.</description>
    <packaging>${packaging}</packaging>

    <repositories>
        <repository>
            <id>kbss</id>
            <url>https://kbss.felk.cvut.cz/m2repo</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <java.version>17</java.version>
        <org.apache.tika.tika-core.version>3.0.0</org.apache.tika.tika-core.version>
        <org.mapstruct.version>1.6.2</org.mapstruct.version>
        <org.springdoc.version>2.8.5</org.springdoc.version>
        <cz.cvut.kbss.jopa.version>2.2.2</cz.cvut.kbss.jopa.version>
        <cz.cvut.kbss.jsonld.version>0.15.2</cz.cvut.kbss.jsonld.version>

        <!-- Default value for deployment type property which should otherwise specified on command line -->
        <deployment>DEV</deployment>
        <packaging>jar</packaging>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.sgov</groupId>
            <artifactId>sgov-validator</artifactId>
            <version>1.6.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.15</version>
        </dependency>

        <!-- Note: Sticking to an old version because newer versions are significantly slower and consume much more memory -->
        <dependency>
            <groupId>org.topbraid</groupId>
            <artifactId>shacl</artifactId>
            <version>1.3.2</version>
            <exclusions>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-runtime</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.tika/tika-core -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${org.apache.tika.tika-core.version}</version>
        </dependency>

        <!-- JOPA -->
        <dependency>
            <groupId>cz.cvut.kbss.jopa</groupId>
            <artifactId>jopa-impl</artifactId>
            <version>${cz.cvut.kbss.jopa.version}</version>
        </dependency>
        <dependency>
            <groupId>cz.cvut.kbss.jopa</groupId>
            <artifactId>ontodriver-rdf4j</artifactId>
            <version>${cz.cvut.kbss.jopa.version}</version>
        </dependency>
        <!-- For RDF/XML export -->
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-rio-rdfxml</artifactId>
            <version>5.0.2</version>
        </dependency>

        <!-- Spring declarative transactions with JOPA -->
        <dependency>
            <groupId>com.github.ledsoft</groupId>
            <artifactId>jopa-spring-transaction</artifactId>
            <version>0.3.1</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
        </dependency>

        <!-- JWT support for Java -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.11.5</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- JSON-LD support -->
        <dependency>
            <groupId>cz.cvut.kbss.jsonld</groupId>
            <artifactId>jb4jsonld-jackson</artifactId>
            <version>${cz.cvut.kbss.jsonld.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <!-- Servlet-API -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Java bean validation (JSR 380) -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>5.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>5.0.0-M1</version>
        </dependency>

        <!-- jsoup for HTML/XML processing -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.18.1</version>
        </dependency>

        <!-- Flexmark for handling Markdown -->
        <dependency>
            <groupId>com.vladsch.flexmark</groupId>
            <artifactId>flexmark-all</artifactId>
            <version>0.64.8</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Apache POI (Excel support) -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.3.0</version>
        </dependency>

        <!-- I18n - language tags and languages -->
        <dependency>
            <groupId>com.neovisionaries</groupId>
            <artifactId>nv-i18n</artifactId>
            <version>1.29</version>
        </dependency>

        <!-- Apache Velocity for templating -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- Java Melody Monitoring -->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-spring-boot-starter</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- Caching -->
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <classifier>jakarta</classifier>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- REST API documentation -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${org.springdoc.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Deployment type profiles -->
        <profile>
            <!-- Project is built as an executable JAR with an embedded Tomcat -->
            <id>standalone</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging>jar</packaging>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- Project is built as a deployable WAR -->
            <id>war</id>
            <properties>
                <packaging>war</packaging>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <warName>termit</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile for GraphDB storage with Lucene connectors. Important for correct full text search functionality -->
        <profile>
            <id>graphdb</id>
            <properties>
                <profile.name>graphdb</profile.name>
                <spring.profiles.active>lucene</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>termit</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <parameters>true</parameters>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.hibernate.validator</groupId>
                            <artifactId>hibernate-validator-annotation-processor</artifactId>
                            <version>${hibernate-validator.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>cz.lukaskabc.cvut.processor</groupId>
                            <artifactId>spring-boot-configuration-docgen-processor</artifactId>
                            <version>1.0</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Aconfigurationdoc.output_file=termit-doc.md</arg>
                        <arg>-Aconfigurationdoc.format=MD</arg>
                        <arg>-Aconfigurationdoc.configuration_package=cz.cvut.kbss.termit</arg>
                        <arg>-Aconfigurationdoc.prepend_required=true</arg>
                    </compilerArgs>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Generate entity classes from OWL integrity constraints -->
                <groupId>cz.cvut.kbss.jopa</groupId>
                <artifactId>jopa-maven-plugin</artifactId>
                <version>${cz.cvut.kbss.jopa.version}</version>
                <executions>
                    <execution>
                        <id>generate-vocabulary</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>owl2java-transform</goal>
                        </goals>
                        <configuration>
                            <package>cz.cvut.kbss.termit.util</package>
                            <output-directory>${project.basedir}/src/main/generated-sources</output-directory>
                            <ontology-iri>http://onto.fel.cvut.cz/ontologies/application/termit</ontology-iri>
                            <mapping-file>${project.basedir}/jopa-config/mapping</mapping-file>
                            <whole-ontology-as-ics>true</whole-ontology-as-ics>
                            <vocabulary-only>true</vocabulary-only>
                            <ignore-failed-imports>true</ignore-failed-imports>
                            <prefix-mapping-file>${project.basedir}/jopa-config/prefixes</prefix-mapping-file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-static-metamodel</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>modelgen</goal>
                        </goals>
                        <configuration>
                            <source-package>cz.cvut.kbss.termit.model</source-package>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <!-- Code coverage plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/generated-sources</source>
                                <source>${project.build.directory}/generated-sources/static-metamodel/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <propertiesEncoding>ISO-8859-1</propertiesEncoding>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                            <overwrite>true</overwrite>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>profile/${profile.name}</directory>
                                    <includes>
                                        <include>query/*.rq</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- use mvn license:check to check for missing license headers, mvn license:format to add license headers -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                    <header>header.txt</header>
                    <excludes>
                        <exclude>.github/**</exclude>
                        <exclude>src/test/resources/**</exclude>
                        <exclude>src/main/resources/**</exclude>
                        <exclude>license.txt</exclude>
                        <exclude>README.md</exclude>
                        <exclude>**/*.txt</exclude>
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.yml</exclude>
                        <exclude>**/*.ttl</exclude>
                        <exclude>**/*.sh</exclude>
                        <exclude>pom.xml</exclude>
                        <exclude>.editorconfig</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>de.qaware.maven</groupId>
                <artifactId>go-offline-maven-plugin</artifactId>
                <version>1.2.8</version>
            </plugin>
        </plugins>
    </build>
</project>
